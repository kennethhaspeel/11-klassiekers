generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Deelnemer {
    id                String        @id
    naam              String        @db.VarChar(100)
    voornaam          String        @db.VarChar(100)
    email             String        @unique
    telefoon          String        @db.VarChar(100)
    ploegnaam         String        @db.VarChar(100)
    metFoto           Boolean       @default(false)
    bevestigd         Boolean?      @default(false)
    createdAt         DateTime?     @default(now())
    updatedAt         DateTime?     @updatedAt
    Selectie          Selectie[]
    Tussenstand       Tussenstand[]
    SchiftingUur      Int           @default(0)
    SchiftingMinuten  Int           @default(0)
    SchiftingSeconden Int           @default(0)
    PushData          Json?

    @@map("deelnemers")
}

model Selectie {
    id          Int       @id @default(autoincrement())
    deelnemer   Deelnemer @relation(fields: [deelnemerid], references: [id])
    deelnemerid String
    renner      Renner    @relation(fields: [rennerid], references: [id])
    rennerid    Int
    datum_in    DateTime  @db.Date
    datum_uit   DateTime? @db.Date
    transfer_in Boolean?  @default(false)

    @@map("selecties")
}

model Renner {
    id            Int           @id @default(autoincrement())
    naam          String        @db.VarChar(100)
    foto          String
    vlag          String        @db.VarChar(5)
    nationaliteit String
    url           String
    uciranking    Int
    team          Team          @relation(fields: [teamid], references: [id])
    teamid        Int
    Selectie      Selectie[]
    Uitslag       Uitslag[]
    Tussenstand   Tussenstand[]

    @@map("renners")
}

model Team {
    id     Int      @id @default(autoincrement())
    naam   String   @db.VarChar(100)
    url    String
    Renner Renner[]

    @@map("teams")
}

model Wedstrijd {
    id          Int           @id @default(autoincrement())
    naam        String        @db.VarChar(100)
    datum       DateTime      @db.Date
    afgesloten  Boolean
    Uitslag     Uitslag[]
    Tussenstand Tussenstand[]

    @@map("wedstrijden")
}

model Uitslag {
    id          Int       @id @default(autoincrement())
    renner      Renner    @relation(fields: [rennerid], references: [id])
    rennerid    Int
    wedstrijd   Wedstrijd @relation(fields: [wedstrijdid], references: [id])
    wedstrijdid Int
    punten      Int       @default(100)

    @@map("uitslagen")
}

model Tussenstand {
    id          Int       @id @default(autoincrement())
    deelnemer   Deelnemer @relation(fields: [deelnemerid], references: [id])
    deelnemerid String    @map("deelnemerid")
    renner      Renner    @relation(fields: [rennerid], references: [id])
    rennerid    Int       @map("rennerid")
    wedstrijd   Wedstrijd @relation(fields: [wedstrijdid], references: [id])
    wedstrijdid Int       @map("wedstrijdid")
    punten      Int       @default(0)

    @@map("tussenstanden")
}
